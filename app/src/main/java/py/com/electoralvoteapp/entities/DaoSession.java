package py.com.electoralvoteapp.entities;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import py.com.electoralvoteapp.entities.Notifications;
import py.com.electoralvoteapp.entities.TableVotes;
import py.com.electoralvoteapp.entities.Candidates;
import py.com.electoralvoteapp.entities.Votes;

import py.com.electoralvoteapp.entities.NotificationsDao;
import py.com.electoralvoteapp.entities.TableVotesDao;
import py.com.electoralvoteapp.entities.CandidatesDao;
import py.com.electoralvoteapp.entities.VotesDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig notificationsDaoConfig;
    private final DaoConfig tableVotesDaoConfig;
    private final DaoConfig candidatesDaoConfig;
    private final DaoConfig votesDaoConfig;

    private final NotificationsDao notificationsDao;
    private final TableVotesDao tableVotesDao;
    private final CandidatesDao candidatesDao;
    private final VotesDao votesDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        notificationsDaoConfig = daoConfigMap.get(NotificationsDao.class).clone();
        notificationsDaoConfig.initIdentityScope(type);

        tableVotesDaoConfig = daoConfigMap.get(TableVotesDao.class).clone();
        tableVotesDaoConfig.initIdentityScope(type);

        candidatesDaoConfig = daoConfigMap.get(CandidatesDao.class).clone();
        candidatesDaoConfig.initIdentityScope(type);

        votesDaoConfig = daoConfigMap.get(VotesDao.class).clone();
        votesDaoConfig.initIdentityScope(type);

        notificationsDao = new NotificationsDao(notificationsDaoConfig, this);
        tableVotesDao = new TableVotesDao(tableVotesDaoConfig, this);
        candidatesDao = new CandidatesDao(candidatesDaoConfig, this);
        votesDao = new VotesDao(votesDaoConfig, this);

        registerDao(Notifications.class, notificationsDao);
        registerDao(TableVotes.class, tableVotesDao);
        registerDao(Candidates.class, candidatesDao);
        registerDao(Votes.class, votesDao);
    }
    
    public void clear() {
        notificationsDaoConfig.getIdentityScope().clear();
        tableVotesDaoConfig.getIdentityScope().clear();
        candidatesDaoConfig.getIdentityScope().clear();
        votesDaoConfig.getIdentityScope().clear();
    }

    public NotificationsDao getNotificationsDao() {
        return notificationsDao;
    }

    public TableVotesDao getTableVotesDao() {
        return tableVotesDao;
    }

    public CandidatesDao getCandidatesDao() {
        return candidatesDao;
    }

    public VotesDao getVotesDao() {
        return votesDao;
    }

}
